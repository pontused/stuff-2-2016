
package service.itinerary.com.Flight;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "FlightService", targetNamespace = "http://www.flightservice.com")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface FlightService {


    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<service.itinerary.com.Flight.Flight>
     * @throws ParseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFlights", targetNamespace = "http://www.flightservice.com", className = "service.itinerary.com.Flight.GetFlights")
    @ResponseWrapper(localName = "getFlightsResponse", targetNamespace = "http://www.flightservice.com", className = "service.itinerary.com.Flight.GetFlightsResponse")
    @Action(input = "http://www.flightservice.com/FlightService/getFlightsRequest", output = "http://www.flightservice.com/FlightService/getFlightsResponse", fault = {
        @FaultAction(className = ParseException_Exception.class, value = "http://www.flightservice.com/FlightService/getFlights/Fault/ParseException")
    })
    public List<Flight> getFlights(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1)
        throws ParseException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns service.itinerary.com.Flight.Flight
     * @throws NotAuthenticatedException_Exception
     * @throws FlightDoesNotExistException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFlightByID", targetNamespace = "http://www.flightservice.com", className = "service.itinerary.com.Flight.GetFlightByID")
    @ResponseWrapper(localName = "getFlightByIDResponse", targetNamespace = "http://www.flightservice.com", className = "service.itinerary.com.Flight.GetFlightByIDResponse")
    @Action(input = "http://www.flightservice.com/FlightService/getFlightByIDRequest", output = "http://www.flightservice.com/FlightService/getFlightByIDResponse", fault = {
        @FaultAction(className = NotAuthenticatedException_Exception.class, value = "http://www.flightservice.com/FlightService/getFlightByID/Fault/NotAuthenticatedException"),
        @FaultAction(className = FlightDoesNotExistException_Exception.class, value = "http://www.flightservice.com/FlightService/getFlightByID/Fault/FlightDoesNotExistException")
    })
    public Flight getFlightByID(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0)
        throws FlightDoesNotExistException_Exception, NotAuthenticatedException_Exception
    ;

}
